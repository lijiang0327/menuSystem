#!/usr/bin/env node

/**
 * Module dependencies.
 */

var Rotator = require('..');
var program = require('commander');
var pkg = require('../package.json');
var bytes = require('bytes');
var path = require('path');
var ms = require('ms');

// options

program
  .usage('[options] <files>')
  .option('-f, --max-files <files>', 'max number of rotated log files [5]', parseInt)
  .option('-s, --max-size <size>', 'max size before rotating [50mb]', '50mb')
  .option('-i, --interval <n>', 'rotation check interval [5m]', '5m')
  .parse(process.argv);

// --max-size

var maxSize = bytes(program.maxSize);

// --max-files

var maxFiles = program.maxFiles;

// interval

var interval = ms(program.interval);

// files

var files = program.args;
if (!files.length) throw new Error('<files> required');

// setup

var rotate = new Rotator({
  maxSize: maxSize,
  maxFiles: maxFiles
});

rotate.on('start', function(file){
  console.log('  truncating: %s (%s)', file.path, bytes(file.size));
});

rotate.on('complete', function(file){
  console.log('  truncated: %s', file.path);
});

rotate.watch(files);

function start() {
  rotate.start(function(err){
    if (err) throw err;
    setTimeout(function(){
      start();
    }, interval);
  });
}

start();
